
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password'
};

exports.Prisma.BoardScalarFieldEnum = {
  id: 'id',
  name: 'name',
  LastEdited: 'LastEdited',
  Color: 'Color'
};

exports.Prisma.UserHasBoardScalarFieldEnum = {
  id: 'id',
  role: 'role',
  boardId: 'boardId',
  userId: 'userId'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  boardId: 'boardId',
  color: 'color'
};

exports.Prisma.CardScalarFieldEnum = {
  id: 'id',
  status: 'status',
  title: 'title',
  content: 'content',
  startDate: 'startDate',
  endDate: 'endDate',
  creator: 'creator',
  columnId: 'columnId',
  tags: 'tags'
};

exports.Prisma.ListScalarFieldEnum = {
  id: 'id',
  title: 'title',
  cardId: 'cardId'
};

exports.Prisma.ListItemScalarFieldEnum = {
  id: 'id',
  content: 'content',
  listId: 'listId',
  status: 'status'
};

exports.Prisma.ColumnScalarFieldEnum = {
  id: 'id',
  name: 'name',
  boardId: 'boardId',
  order: 'order'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Board: 'Board',
  UserHasBoard: 'UserHasBoard',
  Tag: 'Tag',
  Card: 'Card',
  List: 'List',
  ListItem: 'ListItem',
  Column: 'Column'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\fomi0\\Documents\\GitHub\\tablero-trello\\src\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\fomi0\\Documents\\GitHub\\tablero-trello\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           Int            @id @default(autoincrement())\n  email        String         @unique\n  username     String         @unique\n  password     String\n  UserHasBoard UserHasBoard[]\n  Card         Card[]\n}\n\nmodel Board {\n  id           Int            @id @default(autoincrement())\n  name         String\n  UserHasBoard UserHasBoard[]\n  Tag          Tag[]\n  Column       Column[]\n  LastEdited   String\n  Color        String\n}\n\nmodel UserHasBoard {\n  id      Int    @id @default(autoincrement())\n  board   Board  @relation(fields: [boardId], references: [id])\n  user    User   @relation(fields: [userId], references: [id])\n  role    String\n  boardId Int\n  userId  Int\n}\n\nmodel Tag {\n  id      Int    @id @default(autoincrement())\n  name    String\n  board   Board  @relation(fields: [boardId], references: [id])\n  boardId Int\n  color   String\n}\n\nmodel Card {\n  id        Int     @id @default(autoincrement())\n  status    String\n  title     String\n  content   String\n  startDate String?\n  endDate   String?\n  List      List[]\n  creator   Int\n  users     User[]\n  column    Column  @relation(fields: [columnId], references: [id])\n  columnId  Int\n  tags      String\n}\n\nmodel List {\n  id       Int        @id @default(autoincrement())\n  card     Card       @relation(fields: [cardId], references: [id])\n  title    String\n  cardId   Int\n  ListItem ListItem[]\n}\n\nmodel ListItem {\n  id      Int     @id @default(autoincrement())\n  content String\n  list    List    @relation(fields: [listId], references: [id])\n  listId  Int\n  status  Boolean\n}\n\nmodel Column {\n  id      Int    @id @default(autoincrement())\n  name    String\n  board   Board  @relation(fields: [boardId], references: [id])\n  boardId Int\n  Card    Card[]\n  order   Int\n}\n",
  "inlineSchemaHash": "a0100b619aec958c32536c32803f536749c50924056401905cf0d7848e83ac08",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserHasBoard\",\"kind\":\"object\",\"type\":\"UserHasBoard\",\"relationName\":\"UserToUserHasBoard\"},{\"name\":\"Card\",\"kind\":\"object\",\"type\":\"Card\",\"relationName\":\"CardToUser\"}],\"dbName\":null},\"Board\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserHasBoard\",\"kind\":\"object\",\"type\":\"UserHasBoard\",\"relationName\":\"BoardToUserHasBoard\"},{\"name\":\"Tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"BoardToTag\"},{\"name\":\"Column\",\"kind\":\"object\",\"type\":\"Column\",\"relationName\":\"BoardToColumn\"},{\"name\":\"LastEdited\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Color\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"UserHasBoard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"board\",\"kind\":\"object\",\"type\":\"Board\",\"relationName\":\"BoardToUserHasBoard\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserHasBoard\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"boardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"board\",\"kind\":\"object\",\"type\":\"Board\",\"relationName\":\"BoardToTag\"},{\"name\":\"boardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Card\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"List\",\"kind\":\"object\",\"type\":\"List\",\"relationName\":\"CardToList\"},{\"name\":\"creator\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CardToUser\"},{\"name\":\"column\",\"kind\":\"object\",\"type\":\"Column\",\"relationName\":\"CardToColumn\"},{\"name\":\"columnId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"List\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"card\",\"kind\":\"object\",\"type\":\"Card\",\"relationName\":\"CardToList\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ListItem\",\"kind\":\"object\",\"type\":\"ListItem\",\"relationName\":\"ListToListItem\"}],\"dbName\":null},\"ListItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"list\",\"kind\":\"object\",\"type\":\"List\",\"relationName\":\"ListToListItem\"},{\"name\":\"listId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Column\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"board\",\"kind\":\"object\",\"type\":\"Board\",\"relationName\":\"BoardToColumn\"},{\"name\":\"boardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Card\",\"kind\":\"object\",\"type\":\"Card\",\"relationName\":\"CardToColumn\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

